#!/usr/bin/env node

const esbuild = require(require.resolve('esbuild', { paths: [process.cwd()] }))

const [, , absWorkingDir, entryPoint] = process.argv

const { resolve, config } = require('../lib/froxy/esbuild/utils')
const loadStylePlugin = require('../lib/froxy/esbuild/plugins/load_style')
const envPlugin = require('../lib/froxy/esbuild/plugins/env')
const aliasPlugin = require('../lib/froxy/esbuild/plugins/alias')(absWorkingDir)
const cssPlugin = require('../lib/froxy/esbuild/plugins/css')(absWorkingDir)
const imagesPlugin = require('../lib/froxy/esbuild/plugins/images')(absWorkingDir)
const rootPlugin = require('../lib/froxy/esbuild/plugins/root')(absWorkingDir)

const conf = config(absWorkingDir)

const buildOptions = {
  absWorkingDir,
  entryPoints: [entryPoint],
  bundle: true,
  target: conf.target,
  minify: conf.minify,
  inject: conf.inject,
  sourcemap: conf.sourcemap,
  format: 'esm',
  splitting: true,
  outdir: 'public/froxy/build',
  outbase: '.',
  logLevel: 'error',
  define: {
    global: 'globalThis',
    'process.env.NODE_ENV': `"${process.env.NODE_ENV || 'development'}"`,
    'process.env.RAILS_ENV': `"${process.env.RAILS_ENV || 'development'}"`
  },
  plugins: [aliasPlugin, envPlugin, loadStylePlugin, cssPlugin, imagesPlugin, rootPlugin]
}

esbuild.build(buildOptions).catch(() => {
  process.exit(1)
})
